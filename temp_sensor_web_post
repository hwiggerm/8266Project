#include <ESP8266WiFi.h>
#include <WiFiClient.h> 
#include <ESP8266WebServer.h>
#include <ESP8266HTTPClient.h>

#include "SimpleDHT.h"

// DHT Sensor
int pinDHT11 = 2;
SimpleDHT11 dht11(pinDHT11);


/*Put your SSID & Password*/
const char* ssid = "Dorskamp_ex";  // Enter SSID here
const char* password = "46498342";  //Enter Password here

ESP8266WebServer server(80);


//Web/Server address to read/write from 
const char *host = "84.80.49.52:85";            

float Temperature;
float Humidity;
 
void setup() {
  delay(1000);
  Serial.begin(115200);
  WiFi.mode(WIFI_OFF);        //Prevents reconnection issue (taking too long to connect)
  delay(1000);
  WiFi.mode(WIFI_STA);        //This line hides the viewing of ESP as wifi hotspot
         
  Serial.println("Connecting to ");
  Serial.println(ssid);

  //connect to your local wi-fi network
  WiFi.begin(ssid, password);

  //check wi-fi is connected to wi-fi network
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  
  Serial.println("");
  Serial.println("WiFi connected..!");
  Serial.print("Got IP: ");  Serial.println(WiFi.localIP());

}




void loop() {
  HTTPClient http;    //Declare object of class HTTPClient
  
  byte temperature = 0;
  byte humidity = 0;
  byte device = 1 ; 
  int err ;
  
  while (err != 0 ) {
  err = SimpleDHTErrSuccess;
  if ((err = dht11.read(&temperature, &humidity, NULL)) != SimpleDHTErrSuccess) {
    Serial.print(" error ");
  }
  }
   // http://84.80.49.52:85/logtemp.php?device=1&temp=122&humidity=22
   
   //Post Data
  postData = "device=" + device + "&temp=" + temperature + "&humidity=" + humidity;
  
  http.begin("http://84.80.49.52:85/logtemp.php");                     // request destination
  http.addHeader("Content-Type", "application/x-www-form-urlencoded");  //Specify content-type header

  int httpCode = http.POST(postData);   //Send the request
  String payload = http.getString();    //Get the response payload

  Serial.println(httpCode);   //Print HTTP return code
  Serial.println(payload);    //Print request response payload

  http.end();  //Close connection
  
  delay(5000);  //Post Data at every 5 seconds  
}


